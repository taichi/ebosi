plugins {
  id 'java'
  id 'maven-publish'
  id 'signing'
  id 'io.codearte.nexus-staging' version '0.21.2'
  id 'de.marcphilipp.nexus-publish' version '0.4.0'
}

group = 'io.gige'
version = '0.6.0'

repositories {
  jcenter()
  mavenCentral()
}

java {
  sourceCompatibility = targetCompatibility = JavaVersion.VERSION_14
  withJavadocJar()
  withSourcesJar()
}

tasks.withType(SourceTask).findAll { it.hasProperty('options') } *.options*.encoding = 'UTF-8'

test {
  systemProperty("java.awt.headless", "true")
  useJUnitPlatform()
}

dependencies {
  implementation 'org.eclipse.jdt:org.eclipse.jdt.core:3.22.0'
  implementation 'org.eclipse.jdt:org.eclipse.jdt.compiler.apt:1.3.1000'
  implementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'

  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'

}

jar.manifest {
  attributes(
    'Implementation-Title' : name,
    'Implementation-Version': version,
    'Implementation-Vendor': 'taichi',
    'Built-JDK': "${System.getProperty("java.version")} (${System.getProperty("java.specification.vendor")})",
    'Built-Gradle': gradle.gradleVersion
  )
}

publishing {
  publications {
     mavenJava(MavenPublication) {
      from components.java
      
      pom {
        def gh = 'https://github.com/taichi/gige'
        name = 'Gige'
        description = 'Cross Compiler Annotation Processor Testing library'
        url = gh
        scm {
          url = gh
          connection = "scm:git:${gh}"
          developerConnection = "scm:git:${gh}"
        }
        licenses {
          license {
            name = "The Apache Software License, Version 2.0"
            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution = "repo"
          }
        }
        developers {
          developer {
            id = "taichi"
            name = "Sato Taichi"
            email = "ryushi@gmail.com"
          }
        }
      }
    }
  }
}

signing {
  required { gradle.taskGraph.hasTask("publish") }

  useGpgCmd()
  sign publishing.publications.mavenJava
}

nexusStaging {
  packageGroup = project.group
  stagingProfileId = '1c463cbf19114'
  username = project.hasProperty('nexusUsername') ? project.getProperty('nexusUsername') : null
  password = project.hasProperty('nexusPassword') ? project.getProperty('nexusPassword') : null
}

nexusPublishing {
  repositories {
    sonatype()
  }
}

task install {
  dependsOn 'publishToMavenLocal'
}

task release {
  dependsOn 'closeAndReleaseRepository'
}
